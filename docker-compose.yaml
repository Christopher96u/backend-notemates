# Start development building containers(db, etc): docker-compose up -d --build
# Stop development: docker-compose stop
# Start development (keeping db): docker-compose start
# Remove all volumes: docker-compose down --volumes
# ....
# Redis is deactivated at the moment.
version: '3.9'
services:
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    env_file:
        - .env
    volumes:
      - .:/usr/src/app
    # Run in dev Mode: npm run start:dev
    command: npm run start:dev
    ports:
      - 3000:3000 # Update ports to grab env vars
    depends_on:
      #- redis
      - postgres-notemates
  #redis: # Name of container
    #image: redis
    #ports:
      #- 6379:6379
    #volumes: 
      #- redis:/data
  postgres-notemates:
    container_name: postgres-notemates
    image: postgres
    restart: always
    environment:
      # Update ports to grab env vars
      #POSTGRES_DB: ${DATABASE_NAME}
      #POSTGRES_USER: ${DATABASE_USERNAME}
      #POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: notematesdblatest
    ports: 
      - '5432:5432' # Update ports to grab env vars
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data

volumes:
  docker-nest-postgres:
  #redis:
    #driver: local
